<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="org.cloud.system.mapper.UserMapper">

  <resultMap type="User" id="userMap">
    <id column="id" property="id"></id>
    <result column="username" property="username" />
    <result column="password" property="password" />
    <result column="email" property="email" />
    <result column="status" property="status" />
    <result column="last_login_time" property="lastLoginTime" />
    <result column="create_time" property="createTime" />
    <collection property="userRoles" column="user_id"
      ofType="UserRole">
      <association column="role_id" property="role"
        javaType="Role">
        <id column="id" property="id"></id>
        <result column="role" property="role" />
        <result column="description" property="description" />
      </association>
    </collection>
  </resultMap>

  <select id="selectAll" resultMap="userMap">
    SELECT *
    FROM `sys_users`
    LEFT
    JOIN `sys_users_roles` ON `sys_users`.id=`sys_users_roles`.user_id
    LEFT JOIN `sys_roles` on `sys_users_roles`.role_id=`sys_roles`.id
  </select>

  <select id="selectCount" resultType="long">
    SELECT count(*)
    FROM
    `sys_users`
  </select>

  <select id="selectByPrimaryKey" resultMap="userMap">
    SELECT *
    FROM `sys_users`
    LEFT JOIN `sys_users_roles` ON
    `sys_users`.id=`sys_users_roles`.user_id
    LEFT JOIN `sys_roles` on
    `sys_users_roles`.role_id=`sys_roles`.id
    <where>
      `sys_users`.id=#{id}
    </where>
  </select>

  <select id="selectUserByUsername" resultMap="userMap">
    SELECT *
    FROM `sys_users`
    LEFT JOIN `sys_users_roles` ON
    `sys_users`.id=`sys_users_roles`.user_id
    LEFT JOIN `sys_roles` on
    `sys_users_roles`.role_id=`sys_roles`.id
    <where>
      username=#{username}
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="long">
    DELETE FROM
    `sys_users` WHERE `sys_users`.id=#{id}
  </delete>

  <delete id="deleteUserRole" parameterType="long">
    DELETE FROM
    `sys_users_roles` WHERE user_id=#{0} and role_id=#{1}
  </delete>

  <insert id="addUserRole" parameterType="long">
    INSERT INTO
    `sys_users_roles` (user_id, role_id)
    VALUES (#{0},#{1})
  </insert>

  <delete id="deleteUserRoles" parameterType="long">
    DELETE FROM
    `sys_users_roles`
    <where>
      user_id=#{id}
    </where>
  </delete>

  <insert id="insert" useGeneratedKeys="true" keyProperty="id"
    parameterType="User">
    INSERT INTO `sys_users`
    (username,password,email,status,last_login_time,create_time)
    VALUES
    (#{username},#{password},#{email},#{status},#{lastLoginTime},sysdate())
  </insert>

  <update id="updateStatusByPrimaryKey">
    UPDATE `sys_users`
    <set>
      status=#{status}
    </set>
    <where>
      `sys_users`.id=#{id}
    </where>
  </update>

  <update id="updatePasswordByUserId">
    UPDATE `sys_users`
    <set>
      password = #{password},
    </set>
    <where>
      `sys_users`.id=#{id}
    </where>
  </update>
</mapper>